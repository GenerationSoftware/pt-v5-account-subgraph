specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  {{#twabController}}
  - kind: ethereum
    name: TwabController
    network: {{network}}
    source:
      address: "{{twabController.address}}"
      abi: TwabController
      startBlock: {{twabController.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PrizeVault
        - User
        - Account
        - AccountBalanceUpdate
        - VaultBalanceUpdate
        - AccountObservation
        - VaultObservation
      abis:
        - name: TwabController
          file: ./abis/TwabController.json
      eventHandlers:
        - event: DecreasedBalance(indexed address,indexed address,uint96,uint96)
          handler: handleDecreasedBalance
        - event: DecreasedTotalSupply(indexed address,uint96,uint96)
          handler: handleDecreasedTotalSupply
        - event: Delegated(indexed address,indexed address,indexed address)
          handler: handleDelegated
        - event: IncreasedBalance(indexed address,indexed address,uint96,uint96)
          handler: handleIncreasedBalance
        - event: IncreasedTotalSupply(indexed address,uint96,uint96)
          handler: handleIncreasedTotalSupply
        # - event: ObservationRecorded(indexed address,indexed address,uint96,uint96,bool,(uint128,uint96,uint32))
        #   handler: handleObservationRecorded
        # - event: TotalSupplyObservationRecorded(indexed address,uint96,uint96,bool,(uint128,uint96,uint32))
        #   handler: handleTotalSupplyObservationRecorded
      file: ./src/mappings/twabController.ts
  {{/twabController}}
  {{#prizePool}}
  - kind: ethereum
    name: PrizePool
    network: {{network}}
    source:
      address: "{{prizePool.address}}"
      abi: PrizePool
      startBlock: {{prizePool.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PrizeClaim
        - Draw
      abis:
        - name: PrizePool
          file: ./abis/PrizePool.json
      eventHandlers:
        # - event: ClaimedPrize(indexed address,indexed address,indexed address,uint24,uint8,uint32,uint152,uint96,address)
        #   handler: handleClaimedPrize
        #   receipt: true
        - event: DrawAwarded(indexed uint24,uint256,uint8,uint8,uint104,uint128,uint48)
          handler: handleDrawAwarded
      file: ./src/mappings/prizePool.ts
  {{/prizePool}}
  # {{#tpdaLiquidationPairFactory}}
  # - kind: ethereum
  #   name: TpdaLiquidationPairFactory
  #   network: {{network}}
  #   source:
  #     address: "{{tpdaLiquidationPairFactory.address}}"
  #     abi: TpdaLiquidationPairFactory
  #     startBlock: {{tpdaLiquidationPairFactory.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - LiquidationPair
  #     abis:
  #       - name: TpdaLiquidationPairFactory
  #         file: ./abis/TpdaLiquidationPairFactory.json
  #     eventHandlers:
  #       - event: PairCreated(indexed address,address,indexed address,indexed address,uint256,uint192,uint256)
  #         handler: handlePairCreated
  #         receipt: true
  #     file: ./src/mappings/tpdaLiquidationPairFactory.ts
  # {{/tpdaLiquidationPairFactory}}
  # {{#tpdaLiquidationRouter}}
  # - kind: ethereum
  #   name: TpdaLiquidationRouter
  #   network: {{network}}
  #   source:
  #     address: "{{tpdaLiquidationRouter.address}}"
  #     abi: TpdaLiquidationRouter
  #     startBlock: {{tpdaLiquidationRouter.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Liquidation
  #     abis:
  #       - name: TpdaLiquidationRouter
  #         file: ./abis/TpdaLiquidationRouter.json
  #     eventHandlers:
  #       - event: SwappedExactAmountOut(indexed address,indexed address,indexed address,uint256,uint256,uint256,uint256)
  #         handler: handleSwappedExactAmountOut
  #         receipt: true
  #     file: ./src/mappings/tpdaLiquidationRouter.ts
  # {{/tpdaLiquidationRouter}}
  {{#prizeVaultFactory}}
  - kind: ethereum
    name: PrizeVaultFactory
    network: {{network}}
    source:
      address: "{{prizeVaultFactory.address}}"
      abi: PrizeVaultFactory
      startBlock: {{prizeVaultFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PrizeVault
      abis:
        - name: PrizeVaultFactory
          file: ./abis/PrizeVaultFactory.json
      eventHandlers:
        - event: NewPrizeVault(indexed address,indexed address,indexed address,string,string)
          handler: handleNewPrizeVault
          receipt: true
      file: ./src/mappings/prizeVaultFactory.ts
  {{/prizeVaultFactory}}
  {{#prizeVaultFactory2}}
  - kind: ethereum
    name: PrizeVaultFactory2
    network: {{network}}
    source:
      address: "{{prizeVaultFactory.address}}"
      abi: PrizeVaultFactory
      startBlock: {{prizeVaultFactory.startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - PrizeVault
      abis:
        - name: PrizeVaultFactory
          file: ./abis/PrizeVaultFactory.json
      eventHandlers:
        - event: NewPrizeVault(indexed address,indexed address,indexed address,string,string)
          handler: handleNewPrizeVault
          receipt: true
      file: ./src/mappings/prizeVaultFactory.ts
  {{/prizeVaultFactory2}}
  # {{#vaultBoostFactory}}
  # - kind: ethereum
  #   name: VaultBoostFactory
  #   network: {{network}}
  #   source:
  #     address: "{{vaultBoostFactory.address}}"
  #     abi: VaultBoostFactory
  #     startBlock: {{vaultBoostFactory.startBlock}}
  #   mapping:
  #     kind: ethereum/events
  #     apiVersion: 0.0.7
  #     language: wasm/assemblyscript
  #     entities:
  #       - Vault
  #     abis:
  #       - name: VaultBoostFactory
  #         file: ./abis/VaultBoostFactory.json
  #     eventHandlers:
  #       - event: CreatedVaultBooster(indexed address,indexed address,indexed address,address)
  #         handler: handleCreatedVaultBooster
  #         receipt: true
  #     file: ./src/mappings/vaultBoostFactory.ts
  # {{/vaultBoostFactory}}

templates:
  - name: PrizeVault
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: PrizeVault
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/prizeVault.ts
      entities:
        - PrizeVault
      abis:
        - name: PrizeVault
          file:  ./abis/PrizeVault.json
      eventHandlers:
        - event: LiquidationPairSet(indexed address,indexed address)
          handler: handleLiquidationPairSet
  - name: VaultBooster
    kind: ethereum/contract
    network: {{network}}
    source:
      abi: VaultBooster
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/mappings/vaultBooster.ts
      entities:
        - VaultBooster
      abis:
        - name: VaultBooster
          file:  ./abis/VaultBooster.json
      eventHandlers:
        - event: LiquidationPairSet(indexed address,indexed address)
          handler: handleLiquidationPairSet
        
 